JSON
 1. Создать внешний репозиторий c названием JSON. 	+
 2. Клонировать репозиторий JSON на локальный компьютер. 	git clone // вместе с URL
 3. Внутри локального JSON создать файл “new.json”.	touch new.json
 4. Добавить файл под гит.	git add new.json
 5. Закоммитить файл.		git commit -m "create file new.json"
 6. Отправить файл на внешний GitHub репозиторий.	git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.	
cat >new.json
{
"FIO": "Пучко Анастасия Анатольевна",
"age": 23,
"pets_amount": 1,
"salary_euro": 800  
}

 8. Отправить изменения на внешний репозиторий. 	git add new.json; git commit -m "new edition of new".json; git push
 9. Создать файл preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

cat > preferences.json
{
"fav_film": "The Great Gatsby",
"fav_series": "How I met your mother",
"fav_food": "Sandwiches",
"fav_season": "Spring",
"country_to_vis": "Portugal"
}

 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

cat > skills.json
{
"skills":"basic knowledges, client-server architecture, http, json/xml, api testing, dev tools, ios/android guidelines, sql"
}

 12. Отправить сразу 2 файла на внешний репозиторий. 
git add preferences.json skills.json; 
git commit -m "add new files preferences.json, skills.json»
git push
 13. На веб интерфейсе создать файл bug_report.json. +
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. +
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 17. Синхронизировать внешний и локальный репозиторий JSON. git pull

_______________________________________________________________

XML
 1. Создать внешний репозиторий c названием XML.	+
 2. Клонировать репозиторий XML на локальный компьютер.	git clone // вместе с URL
 3. Внутри локального XML создать файл “new.xml”.	touch new.xml
 4. Добавить файл под гит.	git add new.xml
 5. Закоммитить файл.		git commit -m "Add file new.xml"
 6. Отправить файл на внешний GitHub репозиторий.	git push
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

cat > new.xml
<INFO>
	<FIO> Puchko Anastasiya Anatolievna</FIO>
	<AGE>23</AGE>
	<PETS_AMOUNT>1</PETS_AMOUNT>
	<SALARY_EURO>800</SALARY_EURO>
</INFO>

 8. Отправить изменения на внешний репозиторий.

git add new.xml
git commit -m "New edition of new.xml file"
git push

 9. Создать файл preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

cat > preferences.xml
<PREFERENCES>
	<FAV_FILM>The Great Gatsby</FAV_FILM>
	<FAV_SERIES>How I met your mother</FAV_SERIES>
	<FAV_FOOD>Sandwiches</FAV_FOOD>
	<FAV_SEASON>Spring</FAV_SEASON>
	<COUNTRY_TO_VIS>Portugal</COUNTRY_TO_VIS>
</PREFERENCES>

 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML.

cat > skills.xml
<SKILLS> Basic knowledges, client-server archirecture, http, json/xml, api testing, dev tools, ios/android guidelines, sql</SKILLS>

 12. Сделать коммит в одну строку.	git add . && git commit -am "Add preferences.xml, skills.xml"
 13. Отправить сразу 2 файла на внешний репозиторий.	git push
 14. На веб интерфейсе создать файл bug_report.xml.	+
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	+
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.	+
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	+
 18. Синхронизировать внешний и локальный репозиторий XML.	git pull
_______________________________________________________________

TXT
 1. Создать внешний репозиторий c названием TXT. +
 2. Клонировать репозиторий TXT на локальный компьютер.	git clone // вместе с URL
 3. Внутри локального TXT создать файл “new.txt”.	touch new.txt
 4. Добавить файл под гит.	git add .
 5. Закоммитить файл.	git commit -m 'Add new.txt file'
 6. Отправить файл на внешний GitHub репозиторий.	git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.

cat > new.txt
Пучко Анастасия Анатольевна
23 года
1 домашнее животное
800 euro  


 8. Отправить изменения на внешний репозиторий.

git add .
git commit -m "Edit new.txt file"
git push

 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.

cat > preferences.txt
Любимый фильм - Великий Гэтсби
любимый сериал - Как я встретил вашу маму
любимая еда - сендвичи
любимая пора года - весна
страна, которую хотела бы посетить - Португалия

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

cat > skills.txt
Basic knowledges, client-server archirecture, http, json/xml, api testing, dev tools, ios/android guidelines, sql

 12. Сделать коммит в одну строку.	 git add . && git commit -am "Add preferences.txt, skills.txt"

 13. Отправить сразу 2 файла на внешний репозиторий. 	git push
 14. На веб интерфейсе создать файл bug_report.txt.	+
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	+
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.	+
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	+
 18. Синхронизировать внешний и локальный репозиторий TXT.	git pull

